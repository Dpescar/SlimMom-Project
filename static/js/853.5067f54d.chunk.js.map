{"version":3,"file":"static/js/853.5067f54d.chunk.js","mappings":"mRAGaA,EAAQC,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0IAKpBC,EAAAA,EAAAA,SAKEC,EAAeJ,EAAAA,QAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6GAC3BC,EAAAA,EAAAA,S,SC4BX,EA/BuB,WACrB,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAAc,IAAIC,MAAOC,mBAAmB,SAC5CC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,cAE7BC,EAAAA,EAAAA,YAAU,WACRR,GAASS,EAAAA,EAAAA,IAAWP,IACpBF,EAASU,EAAAA,GAAAA,kBAAuC,CAAEC,KAAMT,IAC1D,GAAG,CAACA,EAAaF,IAEjB,IAAMY,EAAU,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAI,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC3BpB,GAASqB,EAAAA,EAAAA,IAAeJ,IAAO,wBAAAC,EAAAI,OAAA,GAAAN,EAAA,KAChC,gBAFeO,GAAA,OAAAV,EAAAW,MAAA,KAAAC,UAAA,KAIhB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,UAAU,oBAClBL,EAAAA,EAAAA,MAACjC,EAAK,CAAAmC,SAAA,EACJC,EAAAA,EAAAA,KAACG,EAAAA,GAAiB,CAChBC,aAAcrB,EACdP,SAAUA,EACV6B,iBAAiB,KAGnBL,EAAAA,EAAAA,KAAC/B,EAAY,CAAA8B,UACXC,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACxB,KAAMT,WAKzB,C","sources":["pages/CalculatorPage/CalculatorPage.styled.jsx","pages/CalculatorPage/CalculatorPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { breakpoints } from 'assets/sizes';\n\nexport const Thumb = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  @media ${breakpoints.desktop} {\n    flex-direction: row;\n  }\n`;\n\nexport const ContainerBar = styled.div`\n  @media ${breakpoints.desktop} {\n    height: 100%;\n\n    background-color: var(--secondary-background-color);\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getUsersAdvice } from 'redux/app/auth/auth-operations';\nimport { authSelectors } from 'redux/app/auth';\nimport { diaryPerDayOperation, updateDate } from 'redux/app/diaryPerDay';\n\nimport { DailyCaloriesForm, Header, SideBar } from 'components';\n\nimport { Thumb, ContainerBar } from './CalculatorPage.styled';\n\nconst CalculatorPage = () => {\n  const dispatch = useDispatch();\n  const currentDate = new Date().toLocaleDateString('ro-RO');\n  const userInfo = useSelector(authSelectors.getUserInfo);\n\n  useEffect(() => {\n    dispatch(updateDate(currentDate));\n    dispatch(diaryPerDayOperation.actionGetProducts({ date: currentDate }));\n  }, [currentDate, dispatch]);\n\n  const submitForm = async data => {\n    dispatch(getUsersAdvice(data));\n  };\n\n  return (\n    <>\n      <Header localPage=\"CalculatorPage\" />\n      <Thumb>\n        <DailyCaloriesForm\n          onFormSubmit={submitForm}\n          userInfo={userInfo}\n          isCleanUserInfo={false}\n        />\n\n        <ContainerBar>\n          <SideBar date={currentDate} />\n        </ContainerBar>\n      </Thumb>\n    </>\n  );\n};\nexport default CalculatorPage;\n"],"names":["Thumb","styled","_templateObject","_taggedTemplateLiteral","breakpoints","ContainerBar","_templateObject2","dispatch","useDispatch","currentDate","Date","toLocaleDateString","userInfo","useSelector","authSelectors","useEffect","updateDate","diaryPerDayOperation","date","submitForm","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","getUsersAdvice","stop","_x","apply","arguments","_jsxs","_Fragment","children","_jsx","Header","localPage","DailyCaloriesForm","onFormSubmit","isCleanUserInfo","SideBar"],"sourceRoot":""}